#alta_Usuarios-DirPersonales.ps1 : 
#A la ejeción del script le pasamos 2 parámetros para capturar el nombre del dominio y sufijo (donde queremos crear los usuarios)
#Parámetro 1: el nombre netbios del dominio.
#Parámetro 2: el sufijo del dominio
#Ejemplo: smr.local --> Parámetro 1 sería smr y Parámetro 2 local
# Ejemplo de ejecución del script: alta_Usuarios-DirPersonales.ps1 smr local 

#
#Capturamos los 2 parámetros que hemos pasado en la ejecución del script ($a será el nombre del dominio y $b el sufijo)
#

$dominio=Read-Host 'Introducir dominio sin sufijo'
$sufijo=Read-Host 'Introducir sufijo del dominio'

                        #Nos pide Dominio y Sufijo.




#En la variable dc componemos el nombre dominio y sufijo. Ejemplo: dc=smr,dc=local.
$dc="dc="+$dominio+",dc="+$sufijo

#
#Primero hay que comprobar si se tiene cargado el módulo Active Directory
#
if (!(Get-Module -Name ActiveDirectory)) #Accederá al then solo si no existe una entrada llamada ActiveDirectory
{
  Import-Module ActiveDirectory #Se carga el módulo
}

#
#Creación de los usuarios
#
#
#Preguntamos al usuario que nos indique el fichero csv
#
$fichero_csv=Read-Host "Introducir fichero csv de los usuarios:"

#El fichero csv tiene esta estructura (14 campos)
#Name:Surname:Surname2:NIF:Group:ContainerPath:Computer:Hability:DaysAccountExpire:HomeDrive:HomeDirectory:PerfilPath:ScriptPath:Teletrabajo

#
#Importamos el fichero csv (comando import-csv) y lo cargamos en la variable fichero_csv. 
#El delimitador usado en el csv es el : (separador de campos)
#
$fichero_csv_importado = import-csv -Path $fichero_csv -Delimiter : 			     
foreach($linea_leida in $fichero_csv_importado)
{
	#Componemos la ruta donde queda ubicado el objeto a crear (usuario). Ejemplo: OU=DepInformatica,dc=smr,dc=local
  	$rutaContenedor =$linea_leida.ContainerPath+","+$dc 
	#
  	#Guardamos de manera segura la contraseña con el comando ConvertTo-SecureString. En este caso, la contraseña corresponde al NIF (9 números + letra)
	#

	
	$name=$linea_leida.Name
	$nameShort=$linea_leida.Name+'.'+$linea_leida.Surname
	$Surnames=$linea_leida.Surname+' '+$linea_leida.Surname2
	$nameLarge=$linea_leida.Name+' '+$linea_leida.Surname+' '+$linea_leida.Surname2
	$computerAccount=$linea_leida.Computer
	$email=$nameShort+"@"+$a+"."+$b
	$perfilmovil=$linea_leida.PerfilMovil+"\"+$nameShort
}


	if (Get-ADUser -filter { name -eq $nameShort })
	{
		$nameShort=$linea_leida.Name+'.'+$linea_leida.Surname+$linea_leida.Surname2
	}


#
  	#El parámetro -Enabled es del tipo booleano por lo que hay que leer la columna del csv
	#que contiene el valor true/false para habilitar o no habilitar el usuario y convertirlo en boolean.
  	#
	[boolean]$Habilitado=$true
  	If($linea_leida.Hability -Match 'false') { $Habilitado=$false}
  
  	$ExpirationAccount = $linea_leida.DaysAccountExpire
 	$timeExp = (get-date).AddDays($ExpirationAccount)
	
	    New-ADUser `
    		-SamAccountName $nameShort `
   	    	-UserPrincipalName $nameShort `
    		-Name $nameShort `
	    	-Surname $Surnames `
    		-DisplayName $nameLarge `
    		-GivenName $name `
    		-LogonWorkstations:$linea_leida.Computer `
	    	-Description "Cuenta de $nameLarge" `
    		-EmailAddress $email `
	    	-AccountPassword $passAccount `
    		-Enabled $Habilitado `
	    	-CannotChangePassword $false `
    		-ChangePasswordAtLogon $true `
	    	-PasswordNotRequired $false `
    		-Path $rutaContenedor `
    		-AccountExpirationDate $timeExp `
	    	-HomeDrive "$linea.HomeDrive:" `
    		-HomeDirectory "$linea_leida.DirPersonales\$nameShort" `
    		-ProfilePath $perfilmovil `
    		-ScriptPath $linea.ScriptPath
